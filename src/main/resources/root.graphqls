scalar BigDecimal
scalar Long

enum PaymentStatus {
    SUCCESS
    DECLINED
    REDIRECT
    IGNORED
}
type PaymentResponsePayload {
    message: String
    redirect: String
    status: PaymentStatus
}
type Carrier {
    name: String!
    value: String!
    cost: BigDecimal!
    image: String
}


type Address {
    id: Long
    alias: String
    firstName: String
    lastName: String
    line1: String
    line2: String
    city: String
    state: String
    country: String
    postalCode: String
    mobile: String
    save: Boolean
        lng: String
        lat: String
        plusCode: String

}
type PaymentMethod {
    ref: String
    name: String
    image: String
}
type CartItem {
    productId: Long
    sku: String
    image: String
    name: String
    quantity: Float
    price: Float
    subTotal: Float
}
type Cart {
    id: ID!
    ref: String
    name: String
    phone: String
    email: String
    secureKey: String
    deliveryAddress: Address
    deliveryAddressId: Long
    invoiceAddress: Address
    addresses: [Address]
    paymentMethods: [PaymentMethod]
    carrier: String
    currency: String
    items: [CartItem]
    tenantId: Long
}
input AddressInput {
     id: Long
     firstName: String
     lastName: String
     line1: String
     line2: String
     city: String
     state: String
     country: String
     postalCode: String
     mobile: String
     save: Boolean
     alias: String
         lng: String
         lat: String
         plusCode: String
}
type Query {
    test(param: String): String
    cart(secureKey: String): Cart
    carriers(state: String, city:String, weight:BigDecimal): [Carrier]
    paymentMethods(currency: String): [PaymentMethod]
}
type Mutation {
    setInfo(email: String, address: AddressInput, secureKey: String): Cart
    processPayment(token: String, ref: String, secureKey: String): PaymentResponsePayload
    setCarrier(value: String, secureKey: String): Cart
}